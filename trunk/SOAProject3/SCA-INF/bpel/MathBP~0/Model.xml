<?xml version="1.0" encoding="UTF-8"?>
<process name="MathBPELProcess" targetNamespace="http://xmlns.oracle.com/ContinousIntegration/SOAProject3/MathBPELProcess" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:client="http://xmlns.oracle.com/ContinousIntegration/SOAProject3/MathBPELProcess" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://oracle.com.soa/" xmlns:ns2="http://www.rackspace.com/" xmlns:bpel2="http://docs.oasis-open.org/wsbpel/2.0/process/executable" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="BpPrc0">

    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    --> 
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="MathBPELService" partnerLinkType="client:MathBPELProcess" myRole="MathBPELProcessProvider"/>
    <partnerLink name="MathService" partnerLinkType="ns1:MathService" partnerRole="IMath"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="client:MathBPELProcessRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="client:MathBPELProcessResponseMessage"/>
    <variable name="InvokeAdd_add_InputVariable" messageType="ns1:addInput"/>
    <variable name="InvokeAdd_add_OutputVariable" messageType="ns1:addOutput"/>
    <variable name="InvokeSubtract_subtract_InputVariable" messageType="ns1:subtractInput"/>
    <variable name="InvokeSubtract_subtract_OutputVariable" messageType="ns1:subtractOutput"/>
    <variable name="InvokeMultiply_multiply_InputVariable" messageType="ns1:multiplyInput"/>
    <variable name="InvokeMultiply_multiply_OutputVariable" messageType="ns1:multiplyOutput"/>
    <variable name="Invoke3_divide_InputVariable" messageType="ns1:divideInput"/>
    <variable name="Invoke3_divide_OutputVariable" messageType="ns1:divideOutput"/>
    <variable name="result" type="xsd:double"/>
  </variables>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main" id="BpSeq0">

    <!-- Receive input from requestor. (Note: This maps to operation defined in MathBPELProcess.wsdl) -->
    <receive name="receiveInput" partnerLink="MathBPELService" portType="client:MathBPELProcess" operation="process" variable="inputVariable" createInstance="yes" id="BpRcv0"/>

    <!-- Generate reply to synchronous request -->
    <scope name="Scope1" id="BpScp0">
      <switch name="Switch1" id="BpSwt0">
        <case condition="bpws:getVariableData('inputVariable','payload','/ns2:mathInput/ns2:operation')='multiply'">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userLabel">multiply</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <scope name="Scope4" id="BpScp1">
            <sequence name="Sequence1" id="BpSeq1">
              <assign name="Assign6" id="BpAss0">
                <copy>
                  <from variable="inputVariable" part="payload" query="/ns2:mathInput/ns2:numberOne"/>
                  <to variable="InvokeMultiply_multiply_InputVariable" part="parameters" query="/ns1:multiply/arg0"/>
                </copy>
                <copy>
                  <from variable="inputVariable" part="payload" query="/ns2:mathInput/ns2:numberTwo"/>
                  <to variable="InvokeMultiply_multiply_InputVariable" part="parameters" query="/ns1:multiply/arg1"/>
                </copy>
              </assign>
              <invoke name="InvokeMultiply" inputVariable="InvokeMultiply_multiply_InputVariable" outputVariable="InvokeMultiply_multiply_OutputVariable" partnerLink="MathService" portType="ns1:IMath" operation="multiply" bpelx:invokeAsDetail="no" id="BpInv0"/>
              <assign name="Assign1" id="BpAss1">
                <copy>
                  <from variable="InvokeMultiply_multiply_OutputVariable" part="parameters" query="/ns1:multiplyResponse/return"/>
                  <to variable="result"/>
                </copy>
              </assign>
            </sequence>
          </scope>
        </case>
        <case condition="bpws:getVariableData('inputVariable','payload','/ns2:mathInput/ns2:operation')='subtract'">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userLabel">subtract</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <scope name="Scope3" id="BpScp2">
            <sequence name="Sequence2" id="BpSeq2">
              <assign name="Assign7" id="BpAss2">
                <copy>
                  <from variable="inputVariable" part="payload" query="/ns2:mathInput/ns2:numberOne"/>
                  <to variable="InvokeSubtract_subtract_InputVariable" part="parameters" query="/ns1:subtract/arg0"/>
                </copy>
                <copy>
                  <from variable="inputVariable" part="payload" query="/ns2:mathInput/ns2:numberTwo"/>
                  <to variable="InvokeSubtract_subtract_InputVariable" part="parameters" query="/ns1:subtract/arg1"/>
                </copy>
              </assign>
              <invoke name="InvokeSubtract" inputVariable="InvokeSubtract_subtract_InputVariable" outputVariable="InvokeSubtract_subtract_OutputVariable" partnerLink="MathService" portType="ns1:IMath" operation="subtract" bpelx:invokeAsDetail="no" id="BpInv1"/>
              <assign name="Assign2" id="BpAss3">
                <copy>
                  <from variable="InvokeSubtract_subtract_OutputVariable" part="parameters" query="/ns1:subtractResponse/return"/>
                  <to variable="result"/>
                </copy>
              </assign>
            </sequence>
          </scope>
        </case>
        <case condition="bpws:getVariableData('inputVariable','payload','/ns2:mathInput/ns2:operation')='add'">
          <bpelx:annotation>
            <bpelx:general>
              <bpelx:property name="userLabel">add</bpelx:property>
            </bpelx:general>
          </bpelx:annotation>
          <scope name="Scope2" id="BpScp3">
            <sequence name="Sequence3" id="BpSeq3">
              <assign name="Assign8" id="BpAss4">
                <copy>
                  <from variable="inputVariable" part="payload" query="/ns2:mathInput/ns2:numberOne"/>
                  <to variable="InvokeAdd_add_InputVariable" part="parameters" query="/ns1:add/arg0"/>
                </copy>
                <copy>
                  <from variable="inputVariable" part="payload" query="/ns2:mathInput/ns2:numberTwo"/>
                  <to variable="InvokeAdd_add_InputVariable" part="parameters" query="/ns1:add/arg1"/>
                </copy>
              </assign>
              <invoke name="InvokeAdd" inputVariable="InvokeAdd_add_InputVariable" outputVariable="InvokeAdd_add_OutputVariable" partnerLink="MathService" portType="ns1:IMath" operation="add" bpelx:invokeAsDetail="no" id="BpInv2"/>
              <assign name="Assign3" id="BpAss5">
                <copy>
                  <from variable="InvokeAdd_add_OutputVariable" part="parameters" query="/ns1:addResponse/return"/>
                  <to variable="result"/>
                </copy>
              </assign>
            </sequence>
          </scope>
        </case>
        <otherwise>
          <scope name="Scope5" id="BpScp4">
            <sequence name="Sequence4" id="BpSeq4">
              <assign name="Assign9" id="BpAss6">
                <copy>
                  <from variable="inputVariable" part="payload" query="/ns2:mathInput/ns2:numberOne"/>
                  <to variable="Invoke3_divide_InputVariable" part="parameters" query="/ns1:divide/arg0"/>
                </copy>
                <copy>
                  <from variable="inputVariable" part="payload" query="/ns2:mathInput/ns2:numberTwo"/>
                  <to variable="Invoke3_divide_InputVariable" part="parameters" query="/ns1:divide/arg1"/>
                </copy>
              </assign>
              <invoke name="InvokeDivide" inputVariable="Invoke3_divide_InputVariable" outputVariable="Invoke3_divide_OutputVariable" partnerLink="MathService" portType="ns1:IMath" operation="divide" bpelx:invokeAsDetail="no" id="BpInv3"/>
              <assign name="Assign4" id="BpAss7">
                <copy>
                  <from variable="Invoke3_divide_OutputVariable" part="parameters" query="/ns1:divideResponse/return"/>
                  <to variable="result"/>
                </copy>
              </assign>
            </sequence>
          </scope>
        </otherwise>
      </switch>
    </scope>
    <assign name="Assign5" id="BpAss8">
      <copy>
        <from variable="result"/>
        <to variable="outputVariable" part="payload" query="/ns2:mathOutput/ns2:result"/>
      </copy>
    </assign>
    <reply name="replyOutput" partnerLink="MathBPELService" portType="client:MathBPELProcess" operation="process" variable="outputVariable" id="BpRpl0"/>
  </sequence>
</process><!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Feb 08 21:34:11 CST 2012
  Author:  IBUCHH_US
  Type: BPEL 1.1 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->